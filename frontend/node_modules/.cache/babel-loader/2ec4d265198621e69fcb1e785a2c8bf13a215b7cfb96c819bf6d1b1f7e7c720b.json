{"ast":null,"code":"import { configureStore, combineReducers, applyMiddleware } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { composewithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducer/userReducers';\nimport { orderReducer, orderDetailReducer, orderPayReducer, orderListMyReducer, orderListReducer } from './reducer/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetail: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderReducer,\n  orderDetail: orderDetailReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  productUpdate: productUpdateReducer\n});\n\n// get string to JSON load in localstorages\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nexport const initialState = {\n  cart: {\n    cartItems: cartItemFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\n// thunk \nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: reducer,\n  preloadedState: initialState,\n  middleware: middleware\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","applyMiddleware","thunk","composewithDevTools","productListReducer","productDetailReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderReducer","orderDetailReducer","orderPayReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetail","productDelete","productCreate","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetail","orderPay","orderListMy","orderList","userList","userDelete","userUpdate","productUpdate","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store","preloadedState"],"sources":["/Users/richy_air/Documents/project/ecommerece/frontend/src/store.js"],"sourcesContent":["import {configureStore, combineReducers, applyMiddleware} from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport {composewithDevTools} from 'redux-devtools-extension'\nimport {productListReducer, productDetailReducer, productDeleteReducer, productCreateReducer, productUpdateReducer} from './reducer/productReducers'\nimport {cartReducer} from './reducer/cartReducers'\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer,\n     userUpdateProfileReducer, userListReducer, userDeleteReducer, \n     userUpdateReducer} from './reducer/userReducers'\nimport {orderReducer, orderDetailReducer, orderPayReducer, \n    orderListMyReducer, orderListReducer} from './reducer/orderReducer'\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetail : productDetailReducer,\n    productDelete: productDeleteReducer, \n    productCreate: productCreateReducer, \n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer, \n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderReducer, \n    orderDetail: orderDetailReducer, \n    orderPay: orderPayReducer, \n    orderListMy : orderListMyReducer, \n    orderList : orderListReducer, \n\n\n    userList: userListReducer, \n    userDelete: userDeleteReducer,  \n    userUpdate: userUpdateReducer,\n    productUpdate: productUpdateReducer,  \n\n    \n})\n\n// get string to JSON load in localstorages\nconst cartItemFromStorage = localStorage.getItem('cartItems') ?\n        JSON.parse(localStorage.getItem('cartItems')) : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n        JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n        JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\n\nexport const initialState = {\n    cart: {\n        cartItems: cartItemFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n    userLogin: {userInfo: userInfoFromStorage}\n\n};\n\n// thunk \nconst middleware = [thunk]; \n\n\nconst store = configureStore({\n    reducer: reducer,\n    preloadedState: initialState,\n    middleware: middleware,\n});\n\nexport default store; "],"mappings":"AAAA,SAAQA,cAAc,EAAEC,eAAe,EAAEC,eAAe,QAAO,kBAAkB;AACjF,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,kBAAkB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAO,2BAA2B;AACpJ,SAAQC,WAAW,QAAO,wBAAwB;AAClD,SAAQC,gBAAgB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAC5DC,wBAAwB,EAAEC,eAAe,EAAEC,iBAAiB,EAC5DC,iBAAiB,QAAO,wBAAwB;AACrD,SAAQC,YAAY,EAAEC,kBAAkB,EAAEC,eAAe,EACrDC,kBAAkB,EAAEC,gBAAgB,QAAO,wBAAwB;AACvE,MAAMC,OAAO,GAAGtB,eAAe,CAAC;EAC5BuB,WAAW,EAAEnB,kBAAkB;EAC/BoB,aAAa,EAAGnB,oBAAoB;EACpCoB,aAAa,EAAEnB,oBAAoB;EACnCoB,aAAa,EAAEnB,oBAAoB;EAEnCoB,IAAI,EAAElB,WAAW;EACjBmB,SAAS,EAAElB,gBAAgB;EAC3BmB,YAAY,EAAElB,mBAAmB;EACjCmB,WAAW,EAAElB,kBAAkB;EAC/BmB,iBAAiB,EAAElB,wBAAwB;EAC3CmB,WAAW,EAAEf,YAAY;EACzBgB,WAAW,EAAEf,kBAAkB;EAC/BgB,QAAQ,EAAEf,eAAe;EACzBgB,WAAW,EAAGf,kBAAkB;EAChCgB,SAAS,EAAGf,gBAAgB;EAG5BgB,QAAQ,EAAEvB,eAAe;EACzBwB,UAAU,EAAEvB,iBAAiB;EAC7BwB,UAAU,EAAEvB,iBAAiB;EAC7BwB,aAAa,EAAEhC;AAGnB,CAAC,CAAC;;AAEF;AACA,MAAMiC,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACrDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAE1D,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACpDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAE3D,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAClEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAGhE,OAAO,MAAMK,YAAY,GAAG;EACxBrB,IAAI,EAAE;IACFsB,SAAS,EAAER,mBAAmB;IAC9BS,eAAe,EAAEH;EACrB,CAAC;EACDnB,SAAS,EAAE;IAACuB,QAAQ,EAAEL;EAAmB;AAE7C,CAAC;;AAED;AACA,MAAMM,UAAU,GAAG,CAAClD,KAAK,CAAC;AAG1B,MAAMmD,KAAK,GAAGtD,cAAc,CAAC;EACzBuB,OAAO,EAAEA,OAAO;EAChBgC,cAAc,EAAEN,YAAY;EAC5BI,UAAU,EAAEA;AAChB,CAAC,CAAC;AAEF,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}