{"ast":null,"code":"import * as cons from '../constants/userConstants';\nimport axios from 'axios';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: cons.USER_LOGIN_REQUEST\n    });\n    const config = {\n      header: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: cons.USER_LOGIN_SUCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: cons.USER_LOGIN_FAILED,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: cons.USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: cons.USER_REGISTER_REQUEST\n    });\n    const config = {\n      header: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: cons.USER_REGISTER_SUCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: cons.USER_REGISTER_FAILED,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["cons","axios","bindActionCreators","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","header","data","post","USER_LOGIN_SUCESS","payload","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAILED","response","detail","message","logout","removeItem","USER_LOGOUT","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCESS","USER_REGISTER_FAILED"],"sources":["/Users/richy_air/Documents/project/ecommerece/frontend/src/actions/userActions.js"],"sourcesContent":["import * as cons from '../constants/userConstants'\nimport axios from 'axios'\nimport { bindActionCreators } from '@reduxjs/toolkit'\n\n\nexport const login = (email, password) => async(dispatch) => {\n    try{\n        dispatch({\n            type: cons.USER_LOGIN_REQUEST,\n        })\n\n        const config={\n            header: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            {'username':email, 'password': password},\n            config\n        )\n        \n        dispatch({\n            type:cons.USER_LOGIN_SUCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n\n        dispatch({\n            type: cons.USER_LOGIN_FAILED,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => { \n    localStorage.removeItem('userInfo')\n    dispatch({type: cons.USER_LOGOUT })\n} \n\n\n\nexport const register = (name, email, password) => async(dispatch) => {\n    try{\n        dispatch({\n            type: cons.USER_REGISTER_REQUEST,\n        })\n\n        const config={\n            header: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/register/',\n            {'name':name, 'username':email, 'password': password},\n            config\n        )\n        \n        dispatch({\n            type:cons.USER_REGISTER_SUCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n\n        dispatch({\n            type: cons.USER_REGISTER_FAILED,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n\n        })\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,kBAAkB;AAGrD,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAK;EACzD,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAAEP,IAAI,CAACQ;IACf,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAC;MACTC,MAAM,EAAE;QACJ,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC3B,mBAAmB,EACnB;MAAC,UAAU,EAACR,KAAK;MAAE,UAAU,EAAEC;IAAQ,CAAC,EACxCI,MAAM,CACT;IAEDH,QAAQ,CAAC;MACLC,IAAI,EAACP,IAAI,CAACa,iBAAiB;MAC3BC,OAAO,EAACH;IACZ,CAAC,CAAC;IAEFI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EAE1D,CAAC,QAAMQ,KAAK,EAAC;IAETb,QAAQ,CAAC;MACLC,IAAI,EAAEP,IAAI,CAACoB,iBAAiB;MAC5BN,OAAO,EAAEK,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACV,IAAI,CAACW,MAAM,GAC/CH,KAAK,CAACE,QAAQ,CAACV,IAAI,CAACW,MAAM,GAC1BH,KAAK,CAACI;IAEhB,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOlB,QAAQ,IAAK;EACtCS,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;EACnCnB,QAAQ,CAAC;IAACC,IAAI,EAAEP,IAAI,CAAC0B;EAAY,CAAC,CAAC;AACvC,CAAC;AAID,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAI,EAAExB,KAAK,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAK;EAClE,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAAEP,IAAI,CAAC6B;IACf,CAAC,CAAC;IAEF,MAAMpB,MAAM,GAAC;MACTC,MAAM,EAAE;QACJ,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC3B,sBAAsB,EACtB;MAAC,MAAM,EAACgB,IAAI;MAAE,UAAU,EAACxB,KAAK;MAAE,UAAU,EAAEC;IAAQ,CAAC,EACrDI,MAAM,CACT;IAEDH,QAAQ,CAAC;MACLC,IAAI,EAACP,IAAI,CAAC8B,oBAAoB;MAC9BhB,OAAO,EAACH;IACZ,CAAC,CAAC;IAEFI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EAE1D,CAAC,QAAMQ,KAAK,EAAC;IAETb,QAAQ,CAAC;MACLC,IAAI,EAAEP,IAAI,CAAC+B,oBAAoB;MAC/BjB,OAAO,EAAEK,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACV,IAAI,CAACW,MAAM,GAC/CH,KAAK,CAACE,QAAQ,CAACV,IAAI,CAACW,MAAM,GAC1BH,KAAK,CAACI;IAEhB,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}