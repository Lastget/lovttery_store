{"ast":null,"code":"import * as cons from '../constants/userConstants';\nimport * as orderCons from '../constants/orderContants';\nimport axios from 'axios';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: cons.USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: cons.USER_LOGIN_SUCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: cons.USER_LOGIN_FAILED,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: cons.USER_LOGOUT\n  });\n  dispatch({\n    type: cons.USER_DETAILS_RESET\n  });\n  dispatch({\n    type: orderCons.ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: cons.USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: cons.USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: cons.USER_REGISTER_SUCESS,\n      payload: data\n    });\n    dispatch({\n      type: cons.USER_LOGIN_SUCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: cons.USER_REGISTER_FAILED,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: cons.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: cons.USER_DETAILS_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: cons.USER_DETAILS_FAILED,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// \n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: cons.USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update`, user, config);\n    dispatch({\n      type: cons.USER_UPDATE_PROFILE_SUCESS,\n      payload: data\n    });\n    dispatch({\n      type: cons.USER_LOGIN_SUCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: cons.USER_UPDATE_PROFILE_FAILED,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: cons.USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/`, config);\n    dispatch({\n      type: cons.USER_LIST_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: cons.USER_LIST_FAILED,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["cons","orderCons","axios","bindActionCreators","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","headers","data","post","USER_LOGIN_SUCESS","payload","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAILED","response","detail","message","logout","removeItem","USER_LOGOUT","USER_DETAILS_RESET","ORDER_LIST_MY_RESET","USER_LIST_RESET","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCESS","USER_REGISTER_FAILED","getUserDetails","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCESS","USER_DETAILS_FAILED","updateUserProfile","user","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCESS","USER_UPDATE_PROFILE_FAILED","listUsers","USER_LIST_REQUEST","USER_LIST_SUCESS","USER_LIST_FAILED"],"sources":["/Users/richy_air/Documents/project/ecommerece/frontend/src/actions/userActions.js"],"sourcesContent":["import * as cons from '../constants/userConstants'\nimport * as orderCons from '../constants/orderContants'\nimport axios from 'axios'\nimport { bindActionCreators } from '@reduxjs/toolkit'\n\n\nexport const login = (email, password) => async(dispatch) => {\n    try{\n        dispatch({\n            type: cons.USER_LOGIN_REQUEST,\n        })\n\n        const config={\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            {'username':email, 'password': password},\n            config\n        )\n        \n        dispatch({\n            type:cons.USER_LOGIN_SUCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n\n        dispatch({\n            type: cons.USER_LOGIN_FAILED,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => { \n    localStorage.removeItem('userInfo')\n    dispatch({type: cons.USER_LOGOUT })\n    dispatch({type: cons.USER_DETAILS_RESET})\n    dispatch({type: orderCons.ORDER_LIST_MY_RESET})\n    dispatch({type: cons.USER_LIST_RESET})\n} \n\n\n\nexport const register = (name, email, password) => async(dispatch) => {\n    try{\n        dispatch({\n            type: cons.USER_REGISTER_REQUEST,\n        })\n\n        const config={\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/register/',\n            {'name':name, 'email':email, 'password': password},\n            config\n        )\n        \n        dispatch({\n            type:cons.USER_REGISTER_SUCESS,\n            payload:data\n        })\n\n        dispatch({\n            type:cons.USER_LOGIN_SUCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n\n        dispatch({\n            type: cons.USER_REGISTER_FAILED,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n\n        })\n    }\n}\n\n\n\nexport const getUserDetails = (id) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: cons.USER_DETAILS_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config={\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n        \n        dispatch({\n            type:cons.USER_DETAILS_SUCESS,\n            payload:data\n        })\n\n    }catch(error){\n\n        dispatch({\n            type: cons.USER_DETAILS_FAILED,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n\n        })\n    }\n}\n\n// \n\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: cons.USER_UPDATE_PROFILE_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config={\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/profile/update`,\n            user,\n            config\n        )\n        \n        dispatch({\n            type:cons.USER_UPDATE_PROFILE_SUCESS,\n            payload:data\n        })\n\n        dispatch({\n            type:cons.USER_LOGIN_SUCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n    }catch(error){\n\n        dispatch({\n            type: cons.USER_UPDATE_PROFILE_FAILED,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n\n        })\n    }\n}\n\n\n\nexport const listUsers = () => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: cons.USER_LIST_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config={\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/`,\n            config\n        )\n        \n        dispatch({\n            type:cons.USER_LIST_SUCESS,\n            payload:data\n        })\n\n\n    }catch(error){\n\n        dispatch({\n            type: cons.USER_LIST_FAILED,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n\n        })\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}